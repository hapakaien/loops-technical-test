name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Node 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Build for production
        run: yarn prod
      
      - name: Upload /public folder
        uses: actions/upload-artifact@v2
        with:
          name: prod
          path: public/
  
  test:
    
    name: Tests with PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        php: [7.3, 7.4]
    services:
      postgres: 
        image: postgres:alpine
        ports: 
          - 5432:5432
        env:
          POSTGRES_PASSWORD: secret

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip
          tools: composer:v2
          coverage: none

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      
      - name: Clear config
        run: php artisan config:clear
        
      - name: Running tests
        run: vendor/bin/phpunit --verbose
    
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
